[
    {
        "id": "a3dacb8a71bb8d43",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "942de6395416ba4c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt_broker",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ab394f095b6c1771",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5d8874c9818097d1",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "Connection to Wildfire InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "4ed31ca1a2fd02ae",
        "type": "mqtt in",
        "z": "a3dacb8a71bb8d43",
        "name": "Localhost MQTT",
        "topic": "wildfire-air-quality",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "942de6395416ba4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 340,
        "wires": [
            [
                "5296eb09b45a76fb"
            ]
        ]
    },
    {
        "id": "94bc59adb413d338",
        "type": "mqtt in",
        "z": "a3dacb8a71bb8d43",
        "name": "Test Mosquitto MQTT",
        "topic": "wildfire-air-quality",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ab394f095b6c1771",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 420,
        "wires": [
            [
                "5296eb09b45a76fb"
            ]
        ]
    },
    {
        "id": "6df72621f9af8bef",
        "type": "comment",
        "z": "a3dacb8a71bb8d43",
        "name": "",
        "info": "This node subscribes to the locally hosted MQTT server deployed with Docker. Its address is \"mqtt_broker\" as this is the name of the service deployed by Docker. Docker automatically converts this to the correct IP address of the self hosted MQTT server",
        "x": 320,
        "y": 300,
        "wires": []
    },
    {
        "id": "e7d86861697bcdf5",
        "type": "influxdb out",
        "z": "a3dacb8a71bb8d43",
        "influxdb": "5d8874c9818097d1",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "wildfire-organization",
        "bucket": "wildfire-bucket",
        "x": 1010,
        "y": 380,
        "wires": []
    },
    {
        "id": "f880b716ec98a44c",
        "type": "debug",
        "z": "a3dacb8a71bb8d43",
        "name": "Print formatted data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 540,
        "wires": []
    },
    {
        "id": "5296eb09b45a76fb",
        "type": "function",
        "z": "a3dacb8a71bb8d43",
        "name": "Format Data for InfluxDB",
        "func": "// Get sensorId\nconst sensorId = msg.payload.sensorId;\n\n// Create fields object dynamically\nconst fields = Object.assign({}, msg.payload); // Copy all properties\ndelete fields.sensorId; // Remove sensorId property\n\n// Create a new message object for InfluxDB\nmsg.payload = fields;\n\nmsg.measurement = sensorId;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 380,
        "wires": [
            [
                "e7d86861697bcdf5",
                "f880b716ec98a44c"
            ]
        ]
    }
]